;  -------------------------
; | B I T T E S T S . A S M |
;  -------------------------
                                ; Test Memory Bits with Accumulator
                                ;--------------------------------------------
        extrn   BIT_2:abs       ; Immediate
        extrn   BIT_4:abs       ; Absolute
        extrn   BIT_5:abs       ; Absolute Indexed with X
        extrn   BIT_7:abs       ; Zero Page
        extrn   BIT_8:abs       ; Zero Page Indexed with X

                                ; Test and Reset Memory Bits with Accumulator
                                ;--------------------------------------------
        extrn   TRB_4:abs       ; Absolute
        extrn   TRB_7:abs       ; Zero Page

                                ; Test and Set Memory Bits with Accumulator
                                ;--------------------------------------------
        extrn   TSB_4:abs       ; Absolute
        extrn   TSB_7:abs       ; Zero Page

;  -----------------------
; | B O O L E A N . A S M |
;  -----------------------
                                ; "AND" Memory with Accumulator
                                ;--------------------------------------------
        extrn   AND_2:abs       ; Immediate
        extrn   AND_4:abs       ; Absolute
        extrn   AND_5:abs       ; Absolute Indexed with X
        extrn   AND_6:abs       ; Absolute Indexed with Y
        extrn   AND_7:abs       ; Zero Page
        extrn   AND_8:abs       ; Zero Page Indexed with X
        extrn   AND_D:abs       ; Zero Page Indirect
        extrn   AND_E:abs       ; Zero Page Indirect, Pre-indexed with X
        extrn   AND_F:abs       ; Zero Page Indirect, Post-indexed with Y

                                ; "Exclusive-OR" Memory with Accumulator
                                ;--------------------------------------------
        extrn   EOR_2:abs       ; Immediate
        extrn   EOR_4:abs       ; Absolute
        extrn   EOR_5:abs       ; Absolute Indexed with X
        extrn   EOR_6:abs       ; Absolute Indexed with Y
        extrn   EOR_7:abs       ; Zero Page
        extrn   EOR_8:abs       ; Zero Page Indexed with X
        extrn   EOR_D:abs       ; Zero Page Indirect
        extrn   EOR_E:abs       ; Zero Page Indirect, Pre-indexed with X
        extrn   EOR_F:abs       ; Zero Page Indirect, Post-indexed with Y

                                ; "OR" Memory with Accumulator
                                ;--------------------------------------------
        extrn   ORA_2:abs       ; Immediate
        extrn   ORA_4:abs       ; Absolute
        extrn   ORA_5:abs       ; Absolute Indexed with X
        extrn   ORA_6:abs       ; Absolute Indexed with Y
        extrn   ORA_7:abs       ; Zero Page
        extrn   ORA_8:abs       ; Zero Page Indexed with X
        extrn   ORA_D:abs       ; Zero Page Indirect
        extrn   ORA_E:abs       ; Zero Page Indirect, Pre-indexed with X
        extrn   ORA_F:abs       ; Zero Page Indirect, Post-indexed with Y

;  -------------------------
; | B R A N C H E S . A S M |
;  -------------------------

        extrn   BRA_3:abs       ; Branch Always
        extrn   BCC_3:abs       ; Branch on Carry Clear
        extrn   BCS_3:abs       ; Branch on Carry Set
        extrn   BEQ_3:abs       ; Branch on Result Zero
        extrn   BMI_3:abs       ; Branch on Result Minus
        extrn   BNE_3:abs       ; Branch on Result Not Zero
        extrn   BPL_3:abs       ; Branch on Result Plus
        extrn   BVC_3:abs       ; Branch on Overflow Clear
        extrn   BVS_3:abs       ; Branch on Overflow Set

;  --------------------------------------
; |  C  O  M  P  A  R  E  S  .  A  S  M  |
;  --------------------------------------

                                ; Compare Memory and Accumulator
                                ;--------------------------------------------
        extrn   CMP_2:abs       ; Immediate
        extrn   CMP_4:abs       ; Absolute
        extrn   CMP_5:abs       ; Absolute Indexed with X
        extrn   CMP_6:abs       ; Absolute Indexed with Y
        extrn   CMP_7:abs       ; Zero Page
        extrn   CMP_8:abs       ; Zero Page Indexed with X
        extrn   CMP_D:abs       ; Zero Page Indirect
        extrn   CMP_E:abs       ; Zero Page Indirect, Pre-indexed with X
        extrn   CMP_F:abs       ; Zero Page Indirect, Post-indexed with Y

                                ; Compare Memory and Index X
                                ;--------------------------------------------
        extrn   CPX_2:abs       ; Immediate
        extrn   CPX_4:abs       ; Absolute
        extrn   CPX_7:abs       ; Zero Page

                                ; Compare Memory and Index Y
                                ;--------------------------------------------
        extrn   CPY_2:abs       ; Immediate
        extrn   CPY_4:abs       ; Absolute
        extrn   CPY_7:abs       ; Zero Page


;  -----------------------------------
; |  D  E  C  &  I  N  C  .  A  S  M  |
;  -----------------------------------

        extrn   DEA_1:abs       ; Decrement Accumulator
        extrn   DEX_0:abs       ; Decrement Index Register X
        extrn   DEY_0:abs       ; Decrement Index Register Y
        extrn   INA_1:abs       ; Increment Accumulator
        extrn   INX_0:abs       ; Increment Index Register X
        extrn   INY_0:abs       ; Increment Index Register Y

                                ; Decrement Memory
                                ;--------------------------------------------
        extrn   DEC_4:abs       ; Absolute
        extrn   DEC_5:abs       ; Absolute Indexed with X
        extrn   DEC_7:abs       ; Zero Page
        extrn   DEC_8:abs       ; Zero Page Indexed with X

                                ; Increment Memory
                                ;--------------------------------------------
        extrn   INC_4:abs       ; Absolute
        extrn   INC_5:abs       ; Absolute Indexed with X
        extrn   INC_7:abs       ; Zero Page
        extrn   INC_8:abs       ; Zero Page Indexed with X

;  --------------------------------------
; |  F  L  A  G  M  O  D  S  .  A  S  M  |
;  --------------------------------------

        extrn   CLC_0:abs       ; Clear the Carry Flag
        extrn   CLD_0:abs       ; Clear the Decimal Mode Flag
        extrn   CLI_0:abs       ; Clear the Interrupt Disable Flag
        extrn   CLV_0:abs       ; Clear the Overflow Flag
        extrn   SEC_0:abs       ; Set the Carry Flag
        extrn   SED_0:abs       ; Set the Decimal Mode Flag
        extrn   SEI_0:abs       ; Set the Interrupt Disable Flag

;  --------------------------------------
; |  I  N  T  R  U  P  T  S  .  A  S  M  |
;  --------------------------------------

        extrn   BRK_0:abs       ; Force Break
        extrn   RTI_0:abs       ; Return from Interrupt

;  -----------------------------
; |  J  U  M  P  S  .  A  S  M  |
;  -----------------------------

        extrn   JSR_4:abs       ; Jump to Subroutine
        extrn   RTS_0:abs       ; Return from Subroutine
        extrn   NOP_0:abs       ; No Operation

                                ; Jump
                                ;--------------------------------------------
        extrn   JMP_4:abs       ; Absolute
        extrn   JMP_A:abs       ; Absolute Indirect
        extrn   JMP_B:abs       ; Absolute Indirect, Pre-indexed with X

;  --------------------------------------
; |  L  O  A  D  S  T  O  R  .  A  S  M  |
;  --------------------------------------

                                ; Load Accumulator
                                ;--------------------------------------------
        extrn   LDA_2:abs       ; Immediate
        extrn   LDA_4:abs       ; Absolute
        extrn   LDA_5:abs       ; Absolute Indexed with X
        extrn   LDA_6:abs       ; Absolute Indexed with Y
        extrn   LDA_7:abs       ; Zero Page
        extrn   LDA_8:abs       ; Zero Page Indexed with X
        extrn   LDA_D:abs       ; Zero Page Indirect
        extrn   LDA_E:abs       ; Zero Page Indirect, Pre-indexed with X
        extrn   LDA_F:abs       ; Zero Page Indirect, Post-indexed with Y

                                ; Load Index Register X
                                ;--------------------------------------------
        extrn   LDX_2:abs       ; Immediate
        extrn   LDX_4:abs       ; Absolute
        extrn   LDX_6:abs       ; Absolute Indexed with Y
        extrn   LDX_7:abs       ; Zero Page
        extrn   LDX_9:abs       ; Zero Page Indexed with Y

                                ; Load Index Register Y
                                ;--------------------------------------------
        extrn   LDY_2:abs       ; Immediate
        extrn   LDY_4:abs       ; Absolute
        extrn   LDY_5:abs       ; Absolute Indexed with X
        extrn   LDY_7:abs       ; Zero Page
        extrn   LDY_8:abs       ; Zero Page Indexed with X

                                ; Store Accumulator
                                ;--------------------------------------------
        extrn   STA_4:abs       ; Absolute
        extrn   STA_5:abs       ; Absolute Indexed with X
        extrn   STA_6:abs       ; Absolute Indexed with Y
        extrn   STA_7:abs       ; Zero Page
        extrn   STA_8:abs       ; Zero Page Indexed with X
        extrn   STA_D:abs       ; Zero Page Indirect
        extrn   STA_E:abs       ; Zero Page Indirect, Pre-indexed with X
        extrn   STA_F:abs       ; Zero Page Indirect, Post-indexed with Y

                                ; Store Index Register X
                                ;--------------------------------------------
        extrn   STX_4:abs       ; Absolute
        extrn   STX_7:abs       ; Zero Page
        extrn   STX_9:abs       ; Zero Page Indexed with Y

                                ; Store Index Register Y
                                ;--------------------------------------------
        extrn   STY_4:abs       ; Absolute
        extrn   STY_7:abs       ; Zero Page
        extrn   STY_8:abs       ; Zero Page Indexed with X

                                ; Store Zero
                                ;--------------------------------------------
        extrn   STZ_4:abs       ; Absolute
        extrn   STZ_5:abs       ; Absolute Indexed with X
        extrn   STZ_7:abs       ; Zero Page
        extrn   STZ_8:abs       ; Zero Page Indexed with X

;  -------------------------
; | M A T H E M A T . A S M |
;  -------------------------
                                ; Add with Carry
                                ;--------------------------------------------
        extrn   ADC_2:abs       ; Immediate
        extrn   ADC_4:abs       ; Absolute
        extrn   ADC_5:abs       ; Absolute Indexed with X
        extrn   ADC_6:abs       ; Absolute Indexed with Y
        extrn   ADC_7:abs       ; Zero Page
        extrn   ADC_8:abs       ; Zero Page Indexed with X
        extrn   ADC_D:abs       ; Zero Page Indirect
        extrn   ADC_E:abs       ; Zero Page Indirect, Pre-indexed with X
        extrn   ADC_F:abs       ; Zero Page Indirect, Post-indexed with Y

                                ; Subtract with Carry
                                ;--------------------------------------------
        extrn   SBC_2:abs       ; Immediate
        extrn   SBC_4:abs       ; Absolute
        extrn   SBC_5:abs       ; Absolute Indexed with X
        extrn   SBC_6:abs       ; Absolute Indexed with Y
        extrn   SBC_7:abs       ; Zero Page
        extrn   SBC_8:abs       ; Zero Page Indexed with X
        extrn   SBC_D:abs       ; Zero Page Indirect
        extrn   SBC_E:abs       ; Zero Page Indirect, Pre-indexed with X
        extrn   SBC_F:abs       ; Zero Page Indirect, Post-indexed with Y

;  --------------------------------------
; |  S  H  F  T  &  R  O  L  .  A  S  M  |
;  --------------------------------------

                                ; Arithmethic Shift Left
                                ;--------------------------------------------
        extrn   ASL_1:abs       ; Accumulator
        extrn   ASL_4:abs       ; Absolute
        extrn   ASL_5:abs       ; Absolute Indexed with X
        extrn   ASL_7:abs       ; Zero Page
        extrn   ASL_8:abs       ; Zero Page Indexed with X

                                ; Logical Shift Right
                                ;--------------------------------------------
        extrn   LSR_1:abs       ; Accumulator
        extrn   LSR_4:abs       ; Absolute
        extrn   LSR_5:abs       ; Absolute Indexed with X
        extrn   LSR_7:abs       ; Zero Page
        extrn   LSR_8:abs       ; Zero Page Indexed with X

                                ; Roll Left
                                ;--------------------------------------------
        extrn   ROL_1:abs       ; Accumulator
        extrn   ROL_4:abs       ; Absolute
        extrn   ROL_5:abs       ; Absolute Indexed with X
        extrn   ROL_7:abs       ; Zero Page
        extrn   ROL_8:abs       ; Zero Page Indexed with X
                                
                                ; Roll Right
                                ;--------------------------------------------
        extrn   ROR_1:abs       ; Accumulator
        extrn   ROR_4:abs       ; Absolute
        extrn   ROR_5:abs       ; Absolute Indexed with X
        extrn   ROR_7:abs       ; Zero Page
        extrn   ROR_8:abs       ; Zero Page Indexed with X

;  --------------------------------------
; |  S  T  A  K  P  R  O  C  .  A  S  M  |
;  --------------------------------------

        extrn   PHA_0:abs       ; Push Accumulator to Stack
        extrn   PLA_0:abs       ; Pull Accumulator from Stack
        extrn   PHP_0:abs       ; Push Processor Status to Stack
        extrn   PLP_0:abs       ; Pull Processor Status from Stack
        extrn   PHX_0:abs       ; Push Index Register X to Stack
        extrn   PLX_0:abs       ; Pull Index Register X from Stack
        extrn   PHY_0:abs       ; Push Index Register Y to Stack
        extrn   PLY_0:abs       ; Pull Index Register Y from Stack

;  --------------------------------------
; |  T  R  A  N  S  F  E  R  .  A  S  M  |
;  --------------------------------------

        extrn   TAX_0:abs       ; Transfer Accumulator to Index Register X
        extrn   TXA_0:abs       ; Transfer Index Register X to Accumulator
        extrn   TAY_0:abs       ; Transfer Accumulator to Index Register Y
        extrn   TYA_0:abs       ; Transfer Index Register Y to Accumulator
        extrn   TSX_0:abs       ; Transfer Stack Pointer to Index Register X
        extrn   TXS_0:abs       ; Transfer Index Register X to Stack Pointer
